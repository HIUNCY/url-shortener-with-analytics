{
    "swagger": "2.0",
    "info": {
        "description": "This is a URL shortener service with analytics.",
        "title": "URL Shortener API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/analytics/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves summary analytics for the authenticated user's dashboard.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user dashboard analytics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserDashboardSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/response.LoginSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidates the user's session (client-side).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "Logged out successfully\" // \u003c-- DIUBAH DI SINI",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generates a new access token using a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshTokenSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully\" // \u003c-- DIUBAH DI SINI",
                        "schema": {
                            "$ref": "#/definitions/response.RegisterSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile of the currently logged-in user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the first and last name of the currently logged-in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile Information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProfileSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/api-key/regenerate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a new API key for the currently logged-in user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Regenerate API Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.APIKeySuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the password of the currently logged-in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password Change Info",
                        "name": "passwords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid current password",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of URLs for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Get user's URLs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query for title or original URL",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "click_count",
                            "title"
                        ],
                        "type": "string",
                        "description": "Sort by field (created_at, click_count, title)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order (asc, desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of URLs retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.URLListSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new short URL for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Create a new short URL",
                "parameters": [
                    {
                        "description": "URL Information",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateURLRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "URL created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.CreateURLSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Custom alias already exists",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{url_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the details of a specific short URL owned by the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Get URL details",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.URLDetailsSuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the properties of a specific short URL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Update a URL",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "URL Update Information",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.URLDetailsSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a specific short URL (soft delete).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Delete a URL",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessMessageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{url_id}/analytics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed analytics for a specific URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get URL analytics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "24h",
                            "7d",
                            "30d",
                            "all"
                        ],
                        "type": "string",
                        "default": "7d",
                        "description": "Time period for analytics",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.URLAnalyticsSuccessResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{url_id}/qr": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves QR code as a base64 string and other info.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QR Codes"
                ],
                "summary": "Get QR Code Info",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 256,
                        "description": "QR code size in pixels",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.QRCodeSuccessResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{url_id}/qr/download": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Downloads the QR code image file.",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "QR Codes"
                ],
                "summary": "Download QR Code",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "URL ID",
                        "name": "url_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 256,
                        "description": "QR code size in pixels",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code Image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/{shortCode}/info": {
            "get": {
                "description": "Retrieves public information about a short URL before redirecting.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redirection"
                ],
                "summary": "Get URL info (Preview)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short Code",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL info retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.URLInfoSuccessResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/{shortCode}/unlock": {
            "post": {
                "description": "Verifies the password for a short URL and returns the original URL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redirection"
                ],
                "summary": "Unlock a password-protected URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short Code",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UnlockURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL unlocked successfully",
                        "schema": {
                            "$ref": "#/definitions/response.UnlockURLSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid password",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    },
                    "404": {
                        "description": "URL not found",
                        "schema": {
                            "$ref": "#/definitions/response.APIErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "request.CreateURLRequest": {
            "type": "object",
            "required": [
                "original_url"
            ],
            "properties": {
                "custom_alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "request.UnlockURLRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UpdateProfileRequest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "request.UpdateURLRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.APIErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/response.ErrorPayload"
                },
                "request_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.APIKeyResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "generated_at": {
                    "type": "string"
                }
            }
        },
        "response.APIKeySuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.APIKeyResponse"
                },
                "message": {
                    "type": "string",
                    "example": "API key regenerated successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.AnalyticsOverview": {
            "type": "object",
            "properties": {
                "top_country": {
                    "type": "string"
                },
                "top_referrer": {
                    "type": "string"
                },
                "total_clicks": {
                    "type": "integer"
                }
            }
        },
        "response.CreateURLResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "custom_alias": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "short_code": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.CreateURLSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CreateURLResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Short URL created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.DashboardActivityItem": {
            "type": "object",
            "properties": {
                "last_clicked_at": {
                    "type": "string"
                },
                "short_code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url_id": {
                    "type": "string"
                }
            }
        },
        "response.DashboardSummary": {
            "type": "object",
            "properties": {
                "active_urls": {
                    "type": "integer"
                },
                "total_clicks": {
                    "type": "integer"
                },
                "total_urls": {
                    "type": "integer"
                }
            }
        },
        "response.DashboardTopURL": {
            "type": "object",
            "properties": {
                "click_count": {
                    "type": "integer"
                },
                "short_code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url_id": {
                    "type": "string"
                }
            }
        },
        "response.ErrorDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.ErrorPayload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ErrorDetail"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.GroupedStat": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/response.UserResponse"
                }
            }
        },
        "response.LoginSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.LoginResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Login successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.PaginationResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "response.ProfileSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UserResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.QRCodeResponse": {
            "type": "object",
            "properties": {
                "download_url": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "response.QRCodeSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.QRCodeResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "response.RefreshTokenSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.RefreshTokenResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.RegisterSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UserResponse"
                },
                "message": {
                    "type": "string",
                    "example": "User registered successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.SuccessMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.TimeSeriesStat": {
            "type": "object",
            "properties": {
                "clicks": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "response.URLAnalyticsResponse": {
            "type": "object",
            "properties": {
                "browsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GroupedStat"
                    }
                },
                "clicks_over_time": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TimeSeriesStat"
                    }
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GroupedStat"
                    }
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GroupedStat"
                    }
                },
                "operating_systems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GroupedStat"
                    }
                },
                "overview": {
                    "$ref": "#/definitions/response.AnalyticsOverview"
                },
                "referrers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GroupedStat"
                    }
                }
            }
        },
        "response.URLAnalyticsSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.URLAnalyticsResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.URLDetailsResponse": {
            "type": "object",
            "properties": {
                "click_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_password_protected": {
                    "type": "boolean"
                },
                "last_clicked_at": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                },
                "short_code": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "unique_click_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.URLDetailsSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.URLDetailsResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.URLInfoResponse": {
            "type": "object",
            "properties": {
                "click_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "is_safe": {
                    "type": "boolean"
                },
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.URLInfoSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.URLInfoResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.URLListItemResponse": {
            "type": "object",
            "properties": {
                "click_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "original_url": {
                    "type": "string"
                },
                "short_code": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.URLListResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/response.PaginationResponse"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.URLListItemResponse"
                    }
                }
            }
        },
        "response.URLListSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.URLListResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.UnlockURLResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                }
            }
        },
        "response.UnlockURLSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UnlockURLResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.UserDashboardResponse": {
            "type": "object",
            "properties": {
                "recent_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DashboardActivityItem"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/response.DashboardSummary"
                },
                "top_performing_urls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DashboardTopURL"
                    }
                }
            }
        },
        "response.UserDashboardSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.UserDashboardResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "plan_type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}